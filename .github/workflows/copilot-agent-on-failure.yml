name: "Create Copilot Agent task"

on:
  workflow_run:
    workflows: ["e2e + TestRail"]
    types: [completed]
  workflow_dispatch:
    inputs:
      run_id:
        description: "CI run ID to analyze (optional)"
        required: false

jobs:
  delegate:
    # Only run when manually triggered OR the upstream workflow failed
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion != 'success' }}

    # ▶️ Use a self-hosted runner that already has `gh auth login` persisted
    runs-on: self-hosted

    # Minimum needed perms for checking out, PR, etc.
    permissions:
      contents: write
      pull-requests: write
      actions: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (Optional) Ensure GitHub CLI is available on the runner
      - name: Ensure gh CLI is installed
        run: |
          if ! command -v gh >/dev/null 2>&1; then
            echo "Installing GitHub CLI..."
            type -p curl >/dev/null || sudo apt-get update
            sudo apt-get install -y curl
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt-get update
            sudo apt-get install -y gh
          fi
          gh --version

      # ✅ Prove we are logged in with an OAuth session (no tokens in secrets)
      - name: Verify gh auth (requires pre-authenticated runner)
        run: |
          set -e
          if [ ! -f "$HOME/.config/gh/hosts.yml" ]; then
            echo "::error::Runner is not pre-authenticated for gh. Run 'gh auth login' on this self-hosted runner (device/web flow) and re-run."
            exit 1
          fi
          gh auth status --hostname github.com

      # Auto mode: take run id from triggering event
      - name: Resolve RUN_ID (auto)
        if: ${{ github.event_name == 'workflow_run' }}
        run: echo "RUN_ID=${{ github.event.workflow_run.id }}" >> $GITHUB_ENV

      # Manual mode: use input run_id or find latest failed
      - name: Resolve RUN_ID (manual)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          if [ -n "${{ github.event.inputs.run_id }}" ]; then
            echo "RUN_ID=${{ github.event.inputs.run_id }}" >> $GITHUB_ENV
          else
            LATEST_FAILED=$(gh run list \
              --workflow "e2e + TestRail" \
              --json databaseId,conclusion,status \
              -q '.[] | select(.conclusion=="failure" and .status=="completed") | .databaseId' \
              | head -n1)
            if [ -z "$LATEST_FAILED" ]; then
              echo "::error::No failed 'e2e + TestRail' runs found to analyze."
              exit 1
            fi
            echo "RUN_ID=$LATEST_FAILED" >> $GITHUB_ENV
          fi

      - name: Ask Copilot to analyze and propose a fix
        env:
          RUN_ID: ${{ env.RUN_ID }}
          REPO: ${{ github.repository }}
        run: |
          set -e
          echo "creating agent task for run ${RUN_ID} in ${REPO}"
          gh auth status

          gh agent-task create "
          Analyze the latest failed workflow run (ID: ${RUN_ID}) for ${REPO}.
          Goals:
          - Download artifacts, read JUnit XML: cypress/reports/results-*.xml
          - Cluster failures by spec and test title; identify root cause(s)
          - Reproduce locally (npm ci; npm run cypress:run)
          - Implement the smallest safe fix in code/tests
          - Open a DRAFT PR from 'fix/agent-${RUN_ID}' with:
            * RCA summary
            * Files changed and rationale
            * How I reproduced & how to run locally
          Constraints: follow .github/copilot-instructions.md; no new secrets or external services."
